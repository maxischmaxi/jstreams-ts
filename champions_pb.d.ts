// @generated by protoc-gen-es v1.10.0
// @generated from file champions.proto (package champions, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message champions.GetChampionsRequest
 */
export declare class GetChampionsRequest extends Message<GetChampionsRequest> {
  /**
   * @generated from field: string patchVersion = 1;
   */
  patchVersion: string;

  constructor(data?: PartialMessage<GetChampionsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "champions.GetChampionsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetChampionsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetChampionsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetChampionsRequest;

  static equals(a: GetChampionsRequest | PlainMessage<GetChampionsRequest> | undefined, b: GetChampionsRequest | PlainMessage<GetChampionsRequest> | undefined): boolean;
}

/**
 * @generated from message champions.GetChampionsResponse
 */
export declare class GetChampionsResponse extends Message<GetChampionsResponse> {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string format = 2;
   */
  format: string;

  /**
   * @generated from field: string version = 3;
   */
  version: string;

  /**
   * @generated from field: map<string, champions.Champion> data = 4;
   */
  data: { [key: string]: Champion };

  constructor(data?: PartialMessage<GetChampionsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "champions.GetChampionsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetChampionsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetChampionsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetChampionsResponse;

  static equals(a: GetChampionsResponse | PlainMessage<GetChampionsResponse> | undefined, b: GetChampionsResponse | PlainMessage<GetChampionsResponse> | undefined): boolean;
}

/**
 * @generated from message champions.ChampionInfo
 */
export declare class ChampionInfo extends Message<ChampionInfo> {
  /**
   * @generated from field: int32 attack = 1;
   */
  attack: number;

  /**
   * @generated from field: int32 defense = 2;
   */
  defense: number;

  /**
   * @generated from field: int32 magic = 3;
   */
  magic: number;

  /**
   * @generated from field: int32 difficulty = 4;
   */
  difficulty: number;

  constructor(data?: PartialMessage<ChampionInfo>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "champions.ChampionInfo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChampionInfo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChampionInfo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChampionInfo;

  static equals(a: ChampionInfo | PlainMessage<ChampionInfo> | undefined, b: ChampionInfo | PlainMessage<ChampionInfo> | undefined): boolean;
}

/**
 * @generated from message champions.Champion
 */
export declare class Champion extends Message<Champion> {
  /**
   * @generated from field: string version = 1;
   */
  version: string;

  /**
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * @generated from field: string key = 3;
   */
  key: string;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string title = 5;
   */
  title: string;

  /**
   * @generated from field: string blurb = 6;
   */
  blurb: string;

  /**
   * @generated from field: champions.ChampionInfo info = 7;
   */
  info?: ChampionInfo;

  /**
   * @generated from field: champions.Image image = 8;
   */
  image?: Image;

  /**
   * @generated from field: repeated string tags = 9;
   */
  tags: string[];

  /**
   * @generated from field: string partype = 10;
   */
  partype: string;

  /**
   * @generated from field: champions.ChampionStats stats = 11;
   */
  stats?: ChampionStats;

  constructor(data?: PartialMessage<Champion>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "champions.Champion";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Champion;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Champion;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Champion;

  static equals(a: Champion | PlainMessage<Champion> | undefined, b: Champion | PlainMessage<Champion> | undefined): boolean;
}

/**
 * @generated from message champions.ChampionStats
 */
export declare class ChampionStats extends Message<ChampionStats> {
  /**
   * @generated from field: int32 hp = 1;
   */
  hp: number;

  /**
   * @generated from field: int32 hpperlevel = 2;
   */
  hpperlevel: number;

  /**
   * @generated from field: int32 mp = 3;
   */
  mp: number;

  /**
   * @generated from field: int32 mpperlevel = 4;
   */
  mpperlevel: number;

  /**
   * @generated from field: int32 movespeed = 5;
   */
  movespeed: number;

  /**
   * @generated from field: int32 armor = 6;
   */
  armor: number;

  /**
   * @generated from field: int32 armorperlevel = 7;
   */
  armorperlevel: number;

  /**
   * @generated from field: int32 spellblock = 8;
   */
  spellblock: number;

  /**
   * @generated from field: int32 spellblockperlevel = 9;
   */
  spellblockperlevel: number;

  /**
   * @generated from field: int32 attackrange = 10;
   */
  attackrange: number;

  /**
   * @generated from field: int32 hpregen = 11;
   */
  hpregen: number;

  /**
   * @generated from field: int32 hpregenperlevel = 12;
   */
  hpregenperlevel: number;

  /**
   * @generated from field: int32 mpregen = 13;
   */
  mpregen: number;

  /**
   * @generated from field: int32 mpregenperlevel = 14;
   */
  mpregenperlevel: number;

  /**
   * @generated from field: int32 crit = 15;
   */
  crit: number;

  /**
   * @generated from field: int32 critperlevel = 16;
   */
  critperlevel: number;

  /**
   * @generated from field: int32 attackdamage = 17;
   */
  attackdamage: number;

  /**
   * @generated from field: int32 attackdamageperlevel = 18;
   */
  attackdamageperlevel: number;

  /**
   * @generated from field: int32 attackspeed = 19;
   */
  attackspeed: number;

  /**
   * @generated from field: int32 attackspeedperlevel = 20;
   */
  attackspeedperlevel: number;

  constructor(data?: PartialMessage<ChampionStats>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "champions.ChampionStats";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChampionStats;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChampionStats;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChampionStats;

  static equals(a: ChampionStats | PlainMessage<ChampionStats> | undefined, b: ChampionStats | PlainMessage<ChampionStats> | undefined): boolean;
}

/**
 * @generated from message champions.Image
 */
export declare class Image extends Message<Image> {
  /**
   * @generated from field: string full = 1;
   */
  full: string;

  /**
   * @generated from field: string sprite = 2;
   */
  sprite: string;

  /**
   * @generated from field: string group = 3;
   */
  group: string;

  /**
   * @generated from field: int32 x = 4;
   */
  x: number;

  /**
   * @generated from field: int32 y = 5;
   */
  y: number;

  /**
   * @generated from field: int32 w = 6;
   */
  w: number;

  /**
   * @generated from field: int32 h = 7;
   */
  h: number;

  constructor(data?: PartialMessage<Image>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "champions.Image";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Image;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Image;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Image;

  static equals(a: Image | PlainMessage<Image> | undefined, b: Image | PlainMessage<Image> | undefined): boolean;
}

