// @generated by protoc-gen-es v1.10.0
// @generated from file masteries.proto (package masteries, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { PlatformRoutingValues } from "./summoner_pb.js";

/**
 * @generated from message masteries.GetChampionMasteriesRequeset
 */
export declare class GetChampionMasteriesRequeset extends Message<GetChampionMasteriesRequeset> {
  /**
   * @generated from field: string puuid = 1;
   */
  puuid: string;

  /**
   * @generated from field: summoner.PlatformRoutingValues region = 2;
   */
  region: PlatformRoutingValues;

  constructor(data?: PartialMessage<GetChampionMasteriesRequeset>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "masteries.GetChampionMasteriesRequeset";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetChampionMasteriesRequeset;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetChampionMasteriesRequeset;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetChampionMasteriesRequeset;

  static equals(a: GetChampionMasteriesRequeset | PlainMessage<GetChampionMasteriesRequeset> | undefined, b: GetChampionMasteriesRequeset | PlainMessage<GetChampionMasteriesRequeset> | undefined): boolean;
}

/**
 * @generated from message masteries.NextSeasonMilestone
 */
export declare class NextSeasonMilestone extends Message<NextSeasonMilestone> {
  /**
   * @generated from field: int32 rewardMarks = 1;
   */
  rewardMarks: number;

  /**
   * @generated from field: bool bonus = 2;
   */
  bonus: boolean;

  /**
   * @generated from field: int32 totalGamesRequires = 3;
   */
  totalGamesRequires: number;

  /**
   * @generated from field: map<string, int32> requireGradeCounts = 4;
   */
  requireGradeCounts: { [key: string]: number };

  constructor(data?: PartialMessage<NextSeasonMilestone>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "masteries.NextSeasonMilestone";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NextSeasonMilestone;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NextSeasonMilestone;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NextSeasonMilestone;

  static equals(a: NextSeasonMilestone | PlainMessage<NextSeasonMilestone> | undefined, b: NextSeasonMilestone | PlainMessage<NextSeasonMilestone> | undefined): boolean;
}

/**
 * @generated from message masteries.ChampionMastery
 */
export declare class ChampionMastery extends Message<ChampionMastery> {
  /**
   * @generated from field: string puuid = 1;
   */
  puuid: string;

  /**
   * @generated from field: int32 championId = 2;
   */
  championId: number;

  /**
   * @generated from field: int32 championLevel = 3;
   */
  championLevel: number;

  /**
   * @generated from field: int32 championPoints = 4;
   */
  championPoints: number;

  /**
   * @generated from field: int32 lastPlayTime = 5;
   */
  lastPlayTime: number;

  /**
   * @generated from field: int32 championPointsSinceLastLevel = 6;
   */
  championPointsSinceLastLevel: number;

  /**
   * @generated from field: int32 championPointsUntilNextLevel = 7;
   */
  championPointsUntilNextLevel: number;

  /**
   * @generated from field: int32 markRequiredForNextLevel = 8;
   */
  markRequiredForNextLevel: number;

  /**
   * @generated from field: int32 tokensEarned = 9;
   */
  tokensEarned: number;

  /**
   * @generated from field: int32 championSeasonMilestone = 10;
   */
  championSeasonMilestone: number;

  /**
   * @generated from field: repeated string milestoneGrades = 11;
   */
  milestoneGrades: string[];

  /**
   * @generated from field: masteries.NextSeasonMilestone nextSeasonMilestone = 12;
   */
  nextSeasonMilestone?: NextSeasonMilestone;

  constructor(data?: PartialMessage<ChampionMastery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "masteries.ChampionMastery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChampionMastery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChampionMastery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChampionMastery;

  static equals(a: ChampionMastery | PlainMessage<ChampionMastery> | undefined, b: ChampionMastery | PlainMessage<ChampionMastery> | undefined): boolean;
}

/**
 * @generated from message masteries.GetChampionMasteriesResponse
 */
export declare class GetChampionMasteriesResponse extends Message<GetChampionMasteriesResponse> {
  /**
   * @generated from field: repeated masteries.ChampionMastery championMasteries = 1;
   */
  championMasteries: ChampionMastery[];

  constructor(data?: PartialMessage<GetChampionMasteriesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "masteries.GetChampionMasteriesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetChampionMasteriesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetChampionMasteriesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetChampionMasteriesResponse;

  static equals(a: GetChampionMasteriesResponse | PlainMessage<GetChampionMasteriesResponse> | undefined, b: GetChampionMasteriesResponse | PlainMessage<GetChampionMasteriesResponse> | undefined): boolean;
}

/**
 * @generated from message masteries.GetChampionMasteriesByChampionRequeset
 */
export declare class GetChampionMasteriesByChampionRequeset extends Message<GetChampionMasteriesByChampionRequeset> {
  /**
   * @generated from field: string puuid = 1;
   */
  puuid: string;

  /**
   * @generated from field: int32 championId = 2;
   */
  championId: number;

  /**
   * @generated from field: summoner.PlatformRoutingValues region = 3;
   */
  region: PlatformRoutingValues;

  constructor(data?: PartialMessage<GetChampionMasteriesByChampionRequeset>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "masteries.GetChampionMasteriesByChampionRequeset";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetChampionMasteriesByChampionRequeset;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetChampionMasteriesByChampionRequeset;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetChampionMasteriesByChampionRequeset;

  static equals(a: GetChampionMasteriesByChampionRequeset | PlainMessage<GetChampionMasteriesByChampionRequeset> | undefined, b: GetChampionMasteriesByChampionRequeset | PlainMessage<GetChampionMasteriesByChampionRequeset> | undefined): boolean;
}

/**
 * @generated from message masteries.GetChampionMasteriesByChampionResponse
 */
export declare class GetChampionMasteriesByChampionResponse extends Message<GetChampionMasteriesByChampionResponse> {
  /**
   * @generated from field: masteries.ChampionMastery championMastery = 1;
   */
  championMastery?: ChampionMastery;

  constructor(data?: PartialMessage<GetChampionMasteriesByChampionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "masteries.GetChampionMasteriesByChampionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetChampionMasteriesByChampionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetChampionMasteriesByChampionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetChampionMasteriesByChampionResponse;

  static equals(a: GetChampionMasteriesByChampionResponse | PlainMessage<GetChampionMasteriesByChampionResponse> | undefined, b: GetChampionMasteriesByChampionResponse | PlainMessage<GetChampionMasteriesByChampionResponse> | undefined): boolean;
}

