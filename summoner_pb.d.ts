// @generated by protoc-gen-es v1.10.0
// @generated from file summoner.proto (package summoner, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Image } from "./champions_pb.js";

/**
 * @generated from enum summoner.PlatformRoutingValues
 */
export declare enum PlatformRoutingValues {
  /**
   * @generated from enum value: BR1 = 0;
   */
  BR1 = 0,

  /**
   * @generated from enum value: EUN1 = 1;
   */
  EUN1 = 1,

  /**
   * @generated from enum value: EUW1 = 2;
   */
  EUW1 = 2,

  /**
   * @generated from enum value: JP1 = 3;
   */
  JP1 = 3,

  /**
   * @generated from enum value: KR = 4;
   */
  KR = 4,

  /**
   * @generated from enum value: LA1 = 5;
   */
  LA1 = 5,

  /**
   * @generated from enum value: LA2 = 6;
   */
  LA2 = 6,

  /**
   * @generated from enum value: ME1 = 7;
   */
  ME1 = 7,

  /**
   * @generated from enum value: NA1 = 8;
   */
  NA1 = 8,

  /**
   * @generated from enum value: OC1 = 9;
   */
  OC1 = 9,

  /**
   * @generated from enum value: PH1 = 10;
   */
  PH1 = 10,

  /**
   * @generated from enum value: RU = 11;
   */
  RU = 11,

  /**
   * @generated from enum value: SG2 = 12;
   */
  SG2 = 12,

  /**
   * @generated from enum value: TH2 = 13;
   */
  TH2 = 13,

  /**
   * @generated from enum value: TR1 = 14;
   */
  TR1 = 14,

  /**
   * @generated from enum value: TW2 = 15;
   */
  TW2 = 15,

  /**
   * @generated from enum value: VN2 = 16;
   */
  VN2 = 16,
}

/**
 * @generated from message summoner.GetSummonerByPuuidRequest
 */
export declare class GetSummonerByPuuidRequest extends Message<GetSummonerByPuuidRequest> {
  /**
   * @generated from field: string puuid = 1;
   */
  puuid: string;

  /**
   * @generated from field: summoner.PlatformRoutingValues region = 2;
   */
  region: PlatformRoutingValues;

  constructor(data?: PartialMessage<GetSummonerByPuuidRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "summoner.GetSummonerByPuuidRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSummonerByPuuidRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSummonerByPuuidRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSummonerByPuuidRequest;

  static equals(a: GetSummonerByPuuidRequest | PlainMessage<GetSummonerByPuuidRequest> | undefined, b: GetSummonerByPuuidRequest | PlainMessage<GetSummonerByPuuidRequest> | undefined): boolean;
}

/**
 * @generated from message summoner.GetSummonerByPuuidResponse
 */
export declare class GetSummonerByPuuidResponse extends Message<GetSummonerByPuuidResponse> {
  /**
   * @generated from field: summoner.Summoner summoner = 1;
   */
  summoner?: Summoner;

  constructor(data?: PartialMessage<GetSummonerByPuuidResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "summoner.GetSummonerByPuuidResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSummonerByPuuidResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSummonerByPuuidResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSummonerByPuuidResponse;

  static equals(a: GetSummonerByPuuidResponse | PlainMessage<GetSummonerByPuuidResponse> | undefined, b: GetSummonerByPuuidResponse | PlainMessage<GetSummonerByPuuidResponse> | undefined): boolean;
}

/**
 * @generated from message summoner.Summoner
 */
export declare class Summoner extends Message<Summoner> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string accountId = 2;
   */
  accountId: string;

  /**
   * @generated from field: string puuid = 3;
   */
  puuid: string;

  /**
   * @generated from field: int32 profileIconId = 4;
   */
  profileIconId: number;

  /**
   * @generated from field: int32 revisionDate = 5;
   */
  revisionDate: number;

  /**
   * @generated from field: int32 summonerLevel = 6;
   */
  summonerLevel: number;

  constructor(data?: PartialMessage<Summoner>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "summoner.Summoner";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Summoner;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Summoner;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Summoner;

  static equals(a: Summoner | PlainMessage<Summoner> | undefined, b: Summoner | PlainMessage<Summoner> | undefined): boolean;
}

/**
 * @generated from message summoner.GetSummonerSpellsRequest
 */
export declare class GetSummonerSpellsRequest extends Message<GetSummonerSpellsRequest> {
  /**
   * @generated from field: string patchVersion = 1;
   */
  patchVersion: string;

  constructor(data?: PartialMessage<GetSummonerSpellsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "summoner.GetSummonerSpellsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSummonerSpellsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSummonerSpellsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSummonerSpellsRequest;

  static equals(a: GetSummonerSpellsRequest | PlainMessage<GetSummonerSpellsRequest> | undefined, b: GetSummonerSpellsRequest | PlainMessage<GetSummonerSpellsRequest> | undefined): boolean;
}

/**
 * @generated from message summoner.GetSummonerSpellsResponse
 */
export declare class GetSummonerSpellsResponse extends Message<GetSummonerSpellsResponse> {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * @generated from field: map<string, summoner.SummonerSpell> data = 3;
   */
  data: { [key: string]: SummonerSpell };

  constructor(data?: PartialMessage<GetSummonerSpellsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "summoner.GetSummonerSpellsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSummonerSpellsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSummonerSpellsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSummonerSpellsResponse;

  static equals(a: GetSummonerSpellsResponse | PlainMessage<GetSummonerSpellsResponse> | undefined, b: GetSummonerSpellsResponse | PlainMessage<GetSummonerSpellsResponse> | undefined): boolean;
}

/**
 * @generated from message summoner.SummonerSpell
 */
export declare class SummonerSpell extends Message<SummonerSpell> {
  /**
   * @generated from field: repeated int32 cooldown = 1;
   */
  cooldown: number[];

  /**
   * @generated from field: string cooldownBurn = 2;
   */
  cooldownBurn: string;

  /**
   * @generated from field: repeated int32 cost = 3;
   */
  cost: number[];

  /**
   * @generated from field: string costBurn = 4;
   */
  costBurn: string;

  /**
   * @generated from field: string costType = 5;
   */
  costType: string;

  /**
   * @generated from field: map<string, string> datavalues = 6;
   */
  datavalues: { [key: string]: string };

  /**
   * @generated from field: string description = 7;
   */
  description: string;

  /**
   * @generated from field: repeated int32 effect = 8;
   */
  effect: number[];

  /**
   * @generated from field: repeated string effectBurn = 9;
   */
  effectBurn: string[];

  /**
   * @generated from field: string id = 10;
   */
  id: string;

  /**
   * @generated from field: champions.Image image = 11;
   */
  image?: Image;

  /**
   * @generated from field: string key = 12;
   */
  key: string;

  /**
   * @generated from field: string maxammo = 13;
   */
  maxammo: string;

  /**
   * @generated from field: int32 maxrank = 14;
   */
  maxrank: number;

  /**
   * @generated from field: repeated string modes = 15;
   */
  modes: string[];

  /**
   * @generated from field: string name = 16;
   */
  name: string;

  /**
   * @generated from field: repeated int32 range = 17;
   */
  range: number[];

  /**
   * @generated from field: string rangeBurn = 18;
   */
  rangeBurn: string;

  /**
   * @generated from field: string resource = 19;
   */
  resource: string;

  /**
   * @generated from field: int32 summonerLevel = 20;
   */
  summonerLevel: number;

  /**
   * @generated from field: string tooltip = 21;
   */
  tooltip: string;

  /**
   * @generated from field: repeated summoner.SummonerSpellVar vars = 22;
   */
  vars: SummonerSpellVar[];

  constructor(data?: PartialMessage<SummonerSpell>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "summoner.SummonerSpell";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SummonerSpell;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SummonerSpell;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SummonerSpell;

  static equals(a: SummonerSpell | PlainMessage<SummonerSpell> | undefined, b: SummonerSpell | PlainMessage<SummonerSpell> | undefined): boolean;
}

/**
 * @generated from message summoner.SummonerSpellVar
 */
export declare class SummonerSpellVar extends Message<SummonerSpellVar> {
  /**
   * @generated from field: string link = 1;
   */
  link: string;

  /**
   * @generated from field: string coeff = 2;
   */
  coeff: string;

  /**
   * @generated from field: string key = 3;
   */
  key: string;

  constructor(data?: PartialMessage<SummonerSpellVar>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "summoner.SummonerSpellVar";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SummonerSpellVar;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SummonerSpellVar;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SummonerSpellVar;

  static equals(a: SummonerSpellVar | PlainMessage<SummonerSpellVar> | undefined, b: SummonerSpellVar | PlainMessage<SummonerSpellVar> | undefined): boolean;
}

